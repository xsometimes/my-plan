[{"E:\\workplace\\code\\my-plan\\src\\index.tsx":"1","E:\\workplace\\code\\my-plan\\src\\reportWebVitals.js":"2","E:\\workplace\\code\\my-plan\\src\\App.tsx":"3","E:\\workplace\\code\\my-plan\\src\\router\\react-router-config.js":"4","E:\\workplace\\code\\my-plan\\src\\router\\routes.ts":"5","E:\\workplace\\code\\my-plan\\src\\views\\annualPlan\\index.tsx":"6","E:\\workplace\\code\\my-plan\\src\\components\\loading.tsx":"7","E:\\workplace\\code\\my-plan\\src\\views\\dashboard\\index.tsx":"8","E:\\workplace\\code\\my-plan\\src\\components\\editGrid\\index.tsx":"9","E:\\workplace\\code\\my-plan\\src\\views\\todoList\\todoItem.tsx":"10","E:\\workplace\\code\\my-plan\\src\\types\\todolist.ts":"11","E:\\workplace\\code\\my-plan\\src\\utils\\eventBus.ts":"12","E:\\workplace\\code\\my-plan\\src\\common\\eventType.ts":"13","E:\\workplace\\code\\my-plan\\src\\utils\\hooks\\form.ts":"14","E:\\workplace\\code\\my-plan\\src\\utils\\date.ts":"15","E:\\workplace\\code\\my-plan\\src\\components\\calendar\\index.tsx":"16","E:\\workplace\\code\\my-plan\\src\\components\\calendar\\Header.tsx":"17","E:\\workplace\\code\\my-plan\\src\\common\\constant.ts":"18","E:\\workplace\\code\\my-plan\\src\\components\\calendar\\Panel.tsx":"19","E:\\workplace\\code\\my-plan\\src\\common\\storageKey.ts":"20","E:\\workplace\\code\\my-plan\\src\\utils\\hooks\\lifetime.ts":"21","E:\\workplace\\code\\my-plan\\src\\utils\\hooks\\useIndexeddb\\index.tsx":"22","E:\\workplace\\code\\my-plan\\src\\utils\\hooks\\useIndexeddb\\db.ts":"23","E:\\workplace\\code\\my-plan\\src\\utils\\arrayUtils.ts":"24","E:\\workplace\\code\\my-plan\\src\\common\\dbConfig.ts":"25","E:\\workplace\\code\\my-plan\\src\\views\\todoList\\todoList.tsx":"26","E:\\workplace\\code\\my-plan\\src\\views\\todoList\\index.tsx":"27","E:\\workplace\\code\\my-plan\\src\\components\\counter.tsx":"28","E:\\workplace\\code\\my-plan\\src\\utils\\hooks\\debounce-throttle.ts":"29","E:\\workplace\\code\\my-plan\\src\\views\\weeklyReport\\weeklyReport.tsx":"30","E:\\workplace\\code\\my-plan\\src\\views\\weeklyReport\\index.tsx":"31","E:\\workplace\\code\\my-plan\\src\\types\\weeklyReport.ts":"32"},{"size":691,"mtime":1616425361649,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":218,"mtime":1617974541629,"results":"36","hashOfConfig":"34"},{"size":964,"mtime":1614769984504,"results":"37","hashOfConfig":"34"},{"size":763,"mtime":1618466637252,"results":"38","hashOfConfig":"34"},{"size":84,"mtime":1614759252326,"results":"39","hashOfConfig":"34"},{"size":87,"mtime":1614762136804,"results":"40","hashOfConfig":"34"},{"size":284,"mtime":1618577166788,"results":"41","hashOfConfig":"34"},{"size":1639,"mtime":1618560461132,"results":"42","hashOfConfig":"34"},{"size":2278,"mtime":1618561372531,"results":"43","hashOfConfig":"34"},{"size":137,"mtime":1616945345660,"results":"44","hashOfConfig":"34"},{"size":76,"mtime":1616425160932,"results":"45","hashOfConfig":"34"},{"size":546,"mtime":1618069061150,"results":"46","hashOfConfig":"34"},{"size":1522,"mtime":1618500105183,"results":"47","hashOfConfig":"34"},{"size":962,"mtime":1618021403819,"results":"48","hashOfConfig":"34"},{"size":824,"mtime":1618321891000,"results":"49","hashOfConfig":"34"},{"size":3631,"mtime":1618326824794,"results":"50","hashOfConfig":"34"},{"size":446,"mtime":1618321997560,"results":"51","hashOfConfig":"34"},{"size":1891,"mtime":1618328398110,"results":"52","hashOfConfig":"34"},{"size":41,"mtime":1617697048528,"results":"53","hashOfConfig":"34"},{"size":515,"mtime":1618411027941,"results":"54","hashOfConfig":"34"},{"size":1111,"mtime":1618304208557,"results":"55","hashOfConfig":"34"},{"size":8045,"mtime":1618468262147,"results":"56","hashOfConfig":"34"},{"size":932,"mtime":1618061668790,"results":"57","hashOfConfig":"34"},{"size":1703,"mtime":1618467666016,"results":"58","hashOfConfig":"34"},{"size":2997,"mtime":1618499673654,"results":"59","hashOfConfig":"34"},{"size":285,"mtime":1617978118208,"results":"60","hashOfConfig":"34"},{"size":522,"mtime":1618298887202,"results":"61","hashOfConfig":"34"},{"size":780,"mtime":1618500113525,"results":"62","hashOfConfig":"34"},{"size":4988,"mtime":1618577898374,"results":"63","hashOfConfig":"34"},{"size":305,"mtime":1618468297740,"results":"64","hashOfConfig":"34"},{"size":404,"mtime":1618468843498,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1yg8e20",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\workplace\\code\\my-plan\\src\\index.tsx",[],["137","138"],"E:\\workplace\\code\\my-plan\\src\\reportWebVitals.js",[],["139","140"],"E:\\workplace\\code\\my-plan\\src\\App.tsx",[],"E:\\workplace\\code\\my-plan\\src\\router\\react-router-config.js",[],"E:\\workplace\\code\\my-plan\\src\\router\\routes.ts",[],"E:\\workplace\\code\\my-plan\\src\\views\\annualPlan\\index.tsx",[],"E:\\workplace\\code\\my-plan\\src\\components\\loading.tsx",[],"E:\\workplace\\code\\my-plan\\src\\views\\dashboard\\index.tsx",[],"E:\\workplace\\code\\my-plan\\src\\components\\editGrid\\index.tsx",[],"E:\\workplace\\code\\my-plan\\src\\views\\todoList\\todoItem.tsx",[],"E:\\workplace\\code\\my-plan\\src\\types\\todolist.ts",[],"E:\\workplace\\code\\my-plan\\src\\utils\\eventBus.ts",[],"E:\\workplace\\code\\my-plan\\src\\common\\eventType.ts",[],"E:\\workplace\\code\\my-plan\\src\\utils\\hooks\\form.ts",[],"E:\\workplace\\code\\my-plan\\src\\utils\\date.ts",[],"E:\\workplace\\code\\my-plan\\src\\components\\calendar\\index.tsx",[],"E:\\workplace\\code\\my-plan\\src\\components\\calendar\\Header.tsx",[],"E:\\workplace\\code\\my-plan\\src\\common\\constant.ts",[],"E:\\workplace\\code\\my-plan\\src\\components\\calendar\\Panel.tsx",[],"E:\\workplace\\code\\my-plan\\src\\common\\storageKey.ts",[],["141","142"],"E:\\workplace\\code\\my-plan\\src\\utils\\hooks\\lifetime.ts",[],"E:\\workplace\\code\\my-plan\\src\\utils\\hooks\\useIndexeddb\\index.tsx",[],"E:\\workplace\\code\\my-plan\\src\\utils\\hooks\\useIndexeddb\\db.ts",[],"E:\\workplace\\code\\my-plan\\src\\utils\\arrayUtils.ts",[],"E:\\workplace\\code\\my-plan\\src\\common\\dbConfig.ts",[],"E:\\workplace\\code\\my-plan\\src\\views\\todoList\\todoList.tsx",["143","144","145"],"import React, { useCallback, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport TodoItem from './todoItem';\r\nimport { useIndexedDBStore } from '../../utils/hooks/useIndexeddb';\r\nimport { getTodayInfo } from '../../utils/date';\r\nimport { useChange } from '../../utils/hooks/form';\r\nimport { useSyncState } from '../../utils/hooks/lifetime';\r\nimport EventType from '../../common/eventType';\r\nimport { Identifier } from '../../types/common';\r\nimport { TodoEntity } from '../../types/todolist';\r\nimport './index.less';\r\n\r\n// @ts-ignore\r\nconst Bus = React.bus\r\n\r\ntype ITodoList = TodoEntity[];\r\n\r\nconst TodoList: React.FC = () => {\r\n\r\n  // 获取、处理日期\r\n  const { date } = useParams<any>()\r\n  const createDate = date.split('-').join('/')\r\n\r\n  // indexedDB数据库方法\r\n  const { add, update, getManyByIndex, deleteById } = useIndexedDBStore<TodoEntity>('todo')\r\n\r\n  const contentNewAdd = useChange('');\r\n\r\n  const [getList, setList] = useSyncState<ITodoList>([])\r\n\r\n  // conponentDidMount 获取当天的todolist\r\n  useEffect(() => {\r\n    getManyByIndex('createDate', createDate).then(res => {\r\n      setList(res)\r\n    })\r\n  }, [])\r\n\r\n  // 新增todo、防抖\r\n  const handleKeyUp = useCallback((e: any) => {\r\n    if (!!contentNewAdd && !!(contentNewAdd.value as any).trim() && e.keyCode === 13) {\r\n      const { today, timeStamp } = getTodayInfo()\r\n      const obj = {\r\n        id: `${new Date().getTime()}`,\r\n        content: `${contentNewAdd.value}`,\r\n        checked: false,\r\n        updateDate: today,\r\n        updateTime: timeStamp,\r\n        createDate\r\n      }\r\n      setList([obj, ...getList()])\r\n      add(obj)\r\n      contentNewAdd.setValue('') // 此处除了清除输入框的功能，还有，刷新页面的功能\r\n    }\r\n  }, [contentNewAdd, add])\r\n\r\n  // 删除todo\r\n  useEffect(() => {\r\n    const handleItemDel = (todoId: Identifier) => {\r\n      setList(getList().filter(item => item.id !== todoId))\r\n      deleteById(todoId)\r\n    }\r\n\r\n    Bus.on(EventType.TODO_ITEM_DELETE, handleItemDel)\r\n\r\n    return () => {\r\n      Bus.off(EventType.TODO_ITEM_DELETE, handleItemDel)\r\n    }\r\n  }, [])\r\n\r\n  // 改变todo的status、content\r\n  useEffect(() => {\r\n    const handleChange = (payload: any) => {\r\n      update(payload)\r\n    }\r\n\r\n    Bus.on(EventType.TODO_ITEM_CHANGE, handleChange)\r\n\r\n    return () => {\r\n      Bus.off(EventType.TODO_ITEM_CHANGE, handleChange)\r\n    }\r\n  }, [update])\r\n\r\n  return <div className=\"todo\">\r\n    <div className=\"myplan-container\">\r\n        <header className=\"todo-header\">\r\n          <div>TODOLIST</div>\r\n          <input placeholder=\"Enter new todo\"\r\n            onKeyUp={handleKeyUp}\r\n            {...contentNewAdd.bindEvent} />\r\n        </header>\r\n        <main>\r\n          \r\n          <div className=\"todo-list\">\r\n            {\r\n              getList().map((item, index) => <TodoItem {...item} key={item.id} />)\r\n            }\r\n          </div>\r\n        </main>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default TodoList;\r\n","E:\\workplace\\code\\my-plan\\src\\views\\todoList\\index.tsx",[],"E:\\workplace\\code\\my-plan\\src\\components\\counter.tsx",[],["146","147"],"E:\\workplace\\code\\my-plan\\src\\utils\\hooks\\debounce-throttle.ts",["148"],"import { useRef, useCallback } from 'react';\r\n\r\nconst defaultDelayTime = 200;\r\n\r\nexport const useDebounce = (fn: Function, delay: number = defaultDelayTime, deps: any[] = []) => {\r\n  const timer = useRef<any>(null);\r\n\r\n  return useCallback((...args) => {\r\n    timer.current && clearTimeout(timer.current);\r\n    timer.current = setTimeout(() => {\r\n      fn(...args);\r\n    }, delay)\r\n  }, [delay, fn, ...deps])\r\n}\r\n\r\nexport const useThrottle = (fn: Function, delay: number = defaultDelayTime) => {\r\n  const timer = useRef<any>(null);\r\n\r\n  return useCallback((...args) => {\r\n    if (timer.current) {\r\n      return\r\n    }\r\n    timer.current = setTimeout(() => {\r\n      fn(...args);\r\n      clearTimeout(timer.current);\r\n      timer.current = null\r\n    }, delay)\r\n  }, [delay, fn])\r\n}\r\n","E:\\workplace\\code\\my-plan\\src\\views\\weeklyReport\\weeklyReport.tsx",["149"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport EditGrid, { GridEmit } from '../../components/editGrid/index';\r\nimport { useIndexedDBStore } from '../../utils/hooks/useIndexeddb';\r\nimport { useDebounce } from '../../utils/hooks/debounce-throttle'; \r\nimport EventType from '../../common/eventType';\r\nimport { WeeklyEntity } from '../../types/weeklyReport';\r\nimport './index.less';\r\n\r\n// @ts-ignore\r\nconst Bus = React.bus\r\n\r\nconst gridCommonProps = {\r\n  className: ['cell'],\r\n  inputType: 'textArea'\r\n}\r\n\r\nconst WeeklyReport: React.FC  = () => {\r\n\r\n  const { getOneByIndex, add, update, deleteById } = useIndexedDBStore<WeeklyEntity>('weeklyReport');\r\n\r\n  // 获取、处理日期\r\n  const { date } = useParams<any>();\r\n  const createDate = date.split('-').join('/');\r\n\r\n  const [flag, setFlag] = useState(true); // 该周报是否新增\r\n\r\n  // 空白周报数据\r\n  const emptyReport = {\r\n    id: '',\r\n    plan: '',\r\n    pNote: '',\r\n    evaluation: '',\r\n    eNote: '',\r\n    cause: '',\r\n    caNote: '',\r\n    conclusion: '',\r\n    coNote: '',\r\n    nextGoals: '',\r\n    gNote: '',\r\n    remarks: '',\r\n    rNote: '',\r\n    createDate\r\n  }\r\n\r\n  // “引用”保存周报数据，不用于页面re-render，仅用于最后的保存\r\n  const reportRef = useRef<WeeklyEntity>(emptyReport);\r\n\r\n  // 设置初始周报数据\r\n  const [initialReport, setInitialReport] = useState<WeeklyEntity>(emptyReport);\r\n  useEffect(() => {\r\n    getOneByIndex('createDate', createDate).then((res: WeeklyEntity | undefined) => {\r\n      if (res) {\r\n        setFlag(false);\r\n        setInitialReport(res);\r\n        reportRef.current = res;\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const handleChange = (payload: GridEmit) => {\r\n      const { editId, value } = payload;\r\n      reportRef.current[editId] = value\r\n    }\r\n\r\n    Bus.on(EventType.GRID_VALUE_CHANGE, handleChange)\r\n\r\n    return () => {\r\n      Bus.off(EventType.GRID_VALUE_CHANGE, handleChange)\r\n    }\r\n  }, [])\r\n\r\n  // 保存，useDebounce禁止保存多次\r\n  const handleSave = useDebounce(() => {\r\n    if (flag) {\r\n      reportRef.current.id = `${new Date().getTime()}`;\r\n      add(reportRef.current)\r\n    } else {\r\n      update(reportRef.current)\r\n    }\r\n  }, 1000, [add, update])\r\n\r\n  const handleClear = useDebounce(() => {\r\n    setInitialReport(emptyReport);\r\n    setFlag(true);\r\n    const reportId = reportRef.current.id;\r\n    console.log(reportId)\r\n    reportId && deleteById(reportId);\r\n    reportRef.current = emptyReport;\r\n  }, 1000, [setFlag, setInitialReport, deleteById])\r\n\r\n  return <div className=\"weekly-report myplan-container\">\r\n    <div className=\"weekly-report-container table-fixed\">\r\n      <div className=\"row table-row-header\">\r\n        <div className=\"cell table-col-header\">项目</div>\r\n        <div className=\"cell\">内容</div>\r\n        <div className=\"cell\">备注</div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"cell table-col-header\">回顾目标</div>\r\n        <EditGrid initialVal={initialReport.plan} editId=\"plan\" {...gridCommonProps} />\r\n        <EditGrid initialVal={initialReport.pNote} editId=\"pNote\" {...gridCommonProps} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"cell table-col-header\">评估结果</div>\r\n        <EditGrid initialVal={initialReport.evaluation} editId=\"evaluation\" {...gridCommonProps} />\r\n        <EditGrid initialVal={initialReport.eNote} editId=\"eNote\" {...gridCommonProps} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"cell table-col-header\">分析原因</div>\r\n        <EditGrid initialVal={initialReport.cause} editId=\"cause\" {...gridCommonProps} />\r\n        <EditGrid initialVal={initialReport.caNote} editId=\"caNote\" {...gridCommonProps} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"cell table-col-header\">总结经验</div>\r\n        <EditGrid initialVal={initialReport.conclusion} editId=\"conclusion\" {...gridCommonProps} />\r\n        <EditGrid initialVal={initialReport.coNote} editId=\"coNote\" {...gridCommonProps} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"cell table-col-header\">工作计划</div>\r\n        <EditGrid initialVal={initialReport.nextGoals} editId=\"nextGoals\" {...gridCommonProps} />\r\n        <EditGrid initialVal={initialReport.gNote} editId=\"gNote\" {...gridCommonProps} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"cell table-col-header\">工作备注</div>\r\n        <EditGrid initialVal={initialReport.remarks} editId=\"remarks\" {...gridCommonProps} />\r\n        <EditGrid initialVal={initialReport.rNote} editId=\"rNote\" {...gridCommonProps} />\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"weekly-report-footer\">\r\n    <div className=\"btn btn-common\" onClick={handleClear}>清空</div>\r\n      <div className=\"btn btn-common btn-primary\" onClick={handleSave}>保存</div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default WeeklyReport;\r\n","E:\\workplace\\code\\my-plan\\src\\views\\weeklyReport\\index.tsx",[],"E:\\workplace\\code\\my-plan\\src\\types\\weeklyReport.ts",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"150","replacedBy":"154"},{"ruleId":"152","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":36,"column":6,"nodeType":"158","endLine":36,"endColumn":8,"suggestions":"159"},{"ruleId":"156","severity":1,"message":"160","line":54,"column":6,"nodeType":"158","endLine":54,"endColumn":26,"suggestions":"161"},{"ruleId":"156","severity":1,"message":"162","line":68,"column":6,"nodeType":"158","endLine":68,"endColumn":8,"suggestions":"163"},{"ruleId":"150","replacedBy":"164"},{"ruleId":"152","replacedBy":"165"},{"ruleId":"156","severity":1,"message":"166","line":14,"column":18,"nodeType":"167","endLine":14,"endColumn":25},{"ruleId":"156","severity":1,"message":"168","line":59,"column":6,"nodeType":"158","endLine":59,"endColumn":8,"suggestions":"169"},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],["170"],["171"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createDate', 'getManyByIndex', and 'setList'. Either include them or remove the dependency array.","ArrayExpression",["172"],"React Hook useCallback has missing dependencies: 'createDate', 'getList', and 'setList'. Either include them or remove the dependency array.",["173"],"React Hook useEffect has missing dependencies: 'deleteById', 'getList', and 'setList'. Either include them or remove the dependency array.",["174"],["170"],["171"],"React Hook useCallback has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","React Hook useEffect has missing dependencies: 'createDate' and 'getOneByIndex'. Either include them or remove the dependency array.",["175"],"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [createDate, getManyByIndex, setList]",{"range":"184","text":"185"},"Update the dependencies array to be: [contentNewAdd, createDate, setList, getList, add]",{"range":"186","text":"187"},"Update the dependencies array to be: [deleteById, getList, setList]",{"range":"188","text":"189"},"Update the dependencies array to be: [createDate, getOneByIndex]",{"range":"190","text":"191"},[1131,1133],"[createDate, getManyByIndex, setList]",[1687,1707],"[contentNewAdd, createDate, setList, getList, add]",[2042,2044],"[deleteById, getList, setList]",[1596,1598],"[createDate, getOneByIndex]"]